import{S as E,a as m,i as c}from"./assets/vendor-64b55ca9.js";(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const e of t)if(e.type==="childList")for(const a of e.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function o(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?e.credentials="include":t.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function s(t){if(t.ep)return;t.ep=!0;const e=o(t);fetch(t.href,e)}})();function h(r){const n=document.querySelector(".gallery");function o(e){const a=e.webformatURL,w=e.largeImageURL,b=e.tags,v=e.likes,$=e.views,q=e.comments,S=e.downloads;return`<div class="card">
            <a href='${w}' class="large-image-link">
              <img class="image" src='${a}' alt="${b}">
              <div class="info">
                <p class="info-item"><span class="info-header">Likes</span><br>${v}</p>
                <p class="info-item"><span class="info-header">Views</span><br>${$}</p>
                <p class="info-item"><span class="info-header">Comments</span><br>${q}</p>
                <p class="info-item"><span class="info-header">Downloads</span><br>${S}</p>
              </div>
            </a>
          </div>`}let s="";r.forEach(e=>{s+=o(e)}),n.insertAdjacentHTML("beforeend",s),new E(".large-image-link").refresh()}const p=document.querySelector(".searchInput"),d=document.querySelector(".loader"),g=document.querySelector(".gallery"),i=document.querySelector(".loadMoreBtn");let l=1,I=0;const f="42324270-89622daef349524aeb531ebd1",y="https://pixabay.com/api/",L="image_type=photo&orientation=horizontal&safesearch=true&per_page=15";async function R(){l=1;const r=p.value.trim(),n=`${y}?key=${f}&q=${r}&${L}`;d.classList.remove("hidden"),g.innerHTML="";try{const s=(await m.get(n)).data;s.hits.length===0?(i.classList.add("hidden"),c.show({position:"topRight",timeout:3500,message:"Sorry, there are no images matching your search query. Please try again!",close:!1,messageColor:"white",backgroundColor:"green"})):(h(s.hits),s.hits.length>=15?i.classList.remove("hidden"):i.classList.add("hidden"))}catch{c.error({title:"Error",message:"Error while rendering images",position:"topRight",timeout:2500})}finally{d.classList.add("hidden")}}async function C(){l+=1;const r=p.value.trim(),n=`${y}?key=${f}&q=${r}&${L}&page=${l}`;let o;try{o=(await m.get(n)).data,I=o.totalHits,h(o.hits),M()}catch{c.error({title:"Error",message:"Error while rendering images",position:"topRight",timeout:2500})}finally{o&&l*15>=o.totalHits?(i.classList.add("hidden"),c.show({position:"topRight",timeout:3500,message:"We're sorry, but you've reached the end of search results.",close:!1,messageColor:"white",backgroundColor:"green"})):i.classList.remove("hidden")}}function M(){const r=g.firstElementChild.getBoundingClientRect().height;window.scrollBy({top:r*2,behavior:"smooth"})}const k=document.querySelector(".submitForm"),B=document.querySelector(".searchInput"),u=document.querySelector(".loadMoreBtn");k.addEventListener("submit",r=>{if(r.preventDefault(),B.value.trim()===""){c.show({position:"topRight",timeout:2e3,message:"Please, enter the word!",close:!1,messageColor:"white",backgroundColor:"grey"});return}R()});u.addEventListener("click",()=>{u.classList.remove("hidden"),C()});
//# sourceMappingURL=commonHelpers.js.map
