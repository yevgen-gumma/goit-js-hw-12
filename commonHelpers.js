import{S as I,a as h,i as d}from"./assets/vendor-64b55ca9.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const a of t.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function n(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function r(e){if(e.ep)return;e.ep=!0;const t=n(e);fetch(e.href,t)}})();function p(o){const s=document.querySelector(".gallery");function n(e){const t=e.webformatURL,a=e.largeImageURL,b=e.tags,v=e.likes,$=e.views,q=e.comments,S=e.downloads;return`<div class="card">
            <a href='${a}' class="large-image-link">
              <img class="image" src='${t}' alt="${b}">
              <div class="info">
                <p class="info-item"><span class="info-header">Likes</span><br>${v}</p>
                <p class="info-item"><span class="info-header">Views</span><br>${$}</p>
                <p class="info-item"><span class="info-header">Comments</span><br>${q}</p>
                <p class="info-item"><span class="info-header">Downloads</span><br>${S}</p>
              </div>
            </a>
          </div>`}o.forEach(e=>{const t=n(e);s.insertAdjacentHTML("beforeend",t)}),new I(".large-image-link").refresh()}const f=document.querySelector(".searchInput"),u=document.querySelector(".loader"),g=document.querySelector(".gallery"),c=document.querySelector(".loadMoreBtn");let i=1,m=0;const y="42324270-89622daef349524aeb531ebd1",L="https://pixabay.com/api/",w="image_type=photo&orientation=horizontal&safesearch=true&per_page=15";async function C(){i=1;const o=f.value.trim(),s=`${L}?key=${y}&q=${o}&${w}`;u.classList.remove("hidden"),g.innerHTML="";try{const r=(await h.get(s)).data;r.hits.length===0?d.show({position:"topRight",timeout:3500,message:"Sorry, there are no images matching your search query. Please try again!",close:!1,messageColor:"white",backgroundColor:"green"}):p(r.hits)}catch{alert("Error while rendering images")}finally{u.classList.add("hidden"),c.classList.remove("hidden")}}async function E(){i+=1;const o=f.value.trim(),s=`${L}?key=${y}&q=${o}&${w}&page=${i}`;try{const r=(await h.get(s)).data;m=r.totalHits,p(r.hits),R()}catch{alert("Error while rendering images")}finally{i*15>=m?(c.classList.add("hidden"),d.show({position:"topRight",timeout:3500,message:"We're sorry, but you've reached the end of search results.",close:!1,messageColor:"white",backgroundColor:"green"})):c.classList.remove("hidden")}}function R(){const o=g.firstElementChild.getBoundingClientRect().height;window.scrollBy({top:o*2,behavior:"smooth"})}const M=document.querySelector(".submitForm"),k=document.querySelector(".searchInput"),l=document.querySelector(".loadMoreBtn");M.addEventListener("submit",o=>{if(o.preventDefault(),k.value.trim()===""){d.show({position:"topRight",timeout:2e3,message:"Please, enter the word!",close:!1,messageColor:"white",backgroundColor:"grey"});return}C(),l.classList.remove("hidden")});l.addEventListener("click",()=>{l.classList.remove("hidden"),E()});
//# sourceMappingURL=commonHelpers.js.map
